# Carregando as bibliotecas necessárias
library(forecast)   # Para análise e previsão de séries temporais
library(ggplot2)    # Para criação de gráficos
library(readxl)     # Para leitura de arquivos Excel
library(dplyr)      # Para manipulação de dados
library(tidyr)      # Para transformação de dados
library(lubridate)  # Para manipulação de datas
library(neuralnet)  # Para construção de redes neurais
library(tidyverse)  # Pacote que inclui várias bibliotecas úteis
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:\Users\emanu\OneDrive\Área de Trabalho\trabalho TCC\ESTUDOS_R\Historico_Prod_ Gas_Bahia
load("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Carregando as bibliotecas necessárias
library(forecast)   # Para análise e previsão de séries temporais
# Instalando as bibliotecas necessárias
install.packages("forecast")   # Para análise e previsão de séries temporais
install.packages("forecast")
# Instalando as bibliotecas necessárias
install.packages("forecast")   # Para análise e previsão de séries temporais
install.packages("ggplot2")    # Para criação de gráficos
install.packages("readxl")     # Para leitura de arquivos Excel
install.packages("dplyr")      # Para manipulação de dados
install.packages("tidyr")      # Para transformação de dados
install.packages("lubridate")  # Para manipulação de datas
install.packages("neuralnet")  # Para construção de redes neurais
install.packages("tidyverse")  # Pacote que inclui várias bibliotecas úteis
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:\Users\emanu\OneDrive\Área de Trabalho\trabalho TCC\ESTUDOS_R\Historico_Prod_ Gas_Bahia
## Frequência mensal Produção de gás na Bahia 2000 a 2022 _ MODIFICADO
# Carregando as bibliotecas necessárias
library(forecast)   # Para análise e previsão de séries temporais
library(ggplot2)    # Para criação de gráficos
library(readxl)     # Para leitura de arquivos Excel
library(dplyr)      # Para manipulação de dados
library(tidyr)      # Para transformação de dados
library(lubridate)  # Para manipulação de datas
library(neuralnet)  # Para construção de redes neurais
library(tidyverse)  # Pacote que inclui várias bibliotecas úteis
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
file.exists("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/Historico_Prod_Gas_Bahia/producao_gas_natural_m3.xlsx")
file.exists("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/Historico_Prod_Gas_Bahia/producao_gas_natural_m3.xlsx")
load("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
file.exists("C:\Users\emanu\OneDrive\Área de Trabalho\trabalho TCC\ESTUDOS_R\Historico_Prod_ Gas_Bahia.xlsx")
file.exists("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/ESTUDOS_R/Historico_Prod_Gas_Bahia/producao_gas_natural_m3.xlsx")
file.exists("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/ESTUDOS_R/Historico_Prod_Gas_Bahia/producao_gas_natural_m3.xlsx")
load("C:/Users/emanu/OneDrive/Área de Trabalho/trabalho TCC/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m³_NAO UTILIZAR_.xlsx")
library(readxl)
producao_gas_natural_m3 <- read_excel("producao_gas_natural_m3.xlsx")
View(producao_gas_natural_m3)
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_excel("C:/Users/emanu/OneDrive/Área de Trabalho/ESTUDOS_R/Historico_Prod_ Gas_Bahia/producao_gas_natural_m3.xlsx")
# Carregando as bibliotecas necessárias
library(forecast)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
library(lubridate)
library(neuralnet)
library(tidyverse)
# Lendo os dados da planilha Excel e criando um dataframe
dados <- read_xlsx("C:/Users/emanu/OneDrive/Área de Trabalho/ESTUDOS_R/Historico_Prod_Gas_Bahia/producao_gas_natural_m3.xlsx")
# Transformando os dados usando pivot_longer para derreter as colunas de anos
dados_long <- dados %>%
pivot_longer(cols = -Mes, names_to = "Ano", values_to = "MediaVazao") %>%
mutate(MesAno = paste(Mes, Ano, sep = "-"))
# Criando a coluna MesAno como uma combinação de mês e ano
dados_long <- dados_long %>%
mutate(MesAno = as.Date(paste0(Ano, "-", Mes, "-01"), format = "%Y-%b-%d"))
# Criando a Série Temporal usando o pacote 'ts'
Serie_Temporal_Mensal <- ts(dados_long$MediaVazao, start = c(2000, 1), frequency = 12)
# 1 - Análise exploratória
# Criando um gráfico de linha da série temporal
ggplot(dados_long, aes(x = MesAno, y = MediaVazao)) +
geom_line() +
labs(title = "Histórico de Vazão Mensal", y = "Vazão Média (m³/d)")
# 2 - Análise de Sazonalidade e Padrões
# Realizando a decomposição da série temporal e plotando o resultado
decomp <- decompose(Serie_Temporal_Mensal)
plot(decomp)
# 3 - Aplicando médias móveis
# Reordenando os dados pelo MesAno
dados_long <- dados_long %>%
arrange(MesAno)
# Calculando médias móveis com janelas de tamanho 3
dados_MediaMovel <- ma(dados_long$MediaVazao, order = 3, centre = TRUE)
# Criando um novo conjunto de dados com MesAno e Médias Móveis
dados_medias_movel <- data.frame(MesAno = dados_long$MesAno, MediaMovel = dados_MediaMovel)
# Plotando gráfico com a série original e médias móveis
ggplot(dados_long, aes(x = MesAno, y = MediaVazao)) +
geom_line(color = "blue", alpha = 0.5) +
geom_line(data = dados_medias_movel, aes(x = MesAno, y = MediaMovel), color = "red", size = 1, show.legend = FALSE) +
labs(title = "Vazão Mensal com Médias Móveis", y = "Vazão (m³/d)", linetype = "Série Original")
# 4 - Modelagem com ARIMA
# Identificando automaticamente o melhor modelo ARIMA
modelo_arima_mensal <- auto.arima(dados_long$MediaVazao, trace = TRUE, approximation = FALSE)
# 4.1 - Implementar o ARIMA com os parâmetros encontrados
# Implementando o modelo ARIMA com os parâmetros obtidos
mod <- Arima(dados_long$MediaVazao, order = c(2, 1, 1))
# 4.2 - Checar a qualidade do modelo
# Realizando o teste de Ljung-Box nos resíduos do modelo ARIMA
checkresiduals(mod)
# 4.3 - Fazer as previsões
# Gerando previsões usando o modelo ARIMA
prev <- forecast(mod, h = 12)
autoplot(prev)
# 5 - Métricas de erro: Erro Absoluto e Gráficos
# Calculando o erro absoluto entre os dados reais e as previsões do ARIMA
erro_absoluto <- abs(dados_long$MediaVazao - modelo_arima_mensal$fitted)
# Plotando o gráfico de erro absoluto
ggplot(data = dados_long, aes(x = MesAno, y = erro_absoluto)) +
geom_line() +
labs(title = "Erro Absoluto do Modelo ARIMA", y = "Erro Absoluto")
# 6 - Métricas de erro: Erro Quadrático e Gráficos
# Calculando o erro quadrático entre os dados reais e as previsões do ARIMA
erro_quadratico <- (dados_long$MediaVazao - modelo_arima_mensal$fitted)^2
# Plotando o gráfico de erro quadrático
ggplot(data = dados_long, aes(x = MesAno, y = erro_quadratico)) +
geom_line() +
labs(title = "Erro Quadrático do Modelo ARIMA", y = "Erro Quadrático")
